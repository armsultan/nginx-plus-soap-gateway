user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Load Modules
load_module modules/ngx_http_js_module.so; # NGINX Javascript

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_id"';

    log_format  test    'CCRT-Subject - "$http_CCRT_Subject" '
                        'ccrtSubject_vin - "$ccrtSubject_vin"';

    # NGINX Plus Additional NGINX Metrics
    log_format  main_ext  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http2" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$host" sn="$server_name" '
                      'rt=$request_time '
                      'ua="$upstream_addr" us="$upstream_status" '
                      'ut="$upstream_response_time" ul="$upstream_response_length" '
                      'cs=$upstream_cache_status $request_id' ;

    access_log  /var/log/nginx/access.log  test; # simple
    # access_log  /var/log/nginx/access.log  main_ext; # NGINX Plus Additional NGINX Metrics

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;    # Regular web traffic
}


# TCP/UDP proxy and load balancing block

# stream {
#     include /etc/nginx/stream.conf.d/*.conf;    # TCP/UDP traffic
# }

# vim: syntax=nginx