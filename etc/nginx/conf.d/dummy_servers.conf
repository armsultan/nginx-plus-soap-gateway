##
# text/xml Webservers | HTTP | port 8096, 8097, 8098, 8099
# Dummy loopback web servers reponds with text/xml
# Fake SOAP API endpoints
# To add more variables see https://nginx.org/en/docs/varindex.html
##

#
# "OT30"
#

server {

  # loopback host
  listen 9001;

  # Accept any hostname
  server_name "";

  default_type text/xml;

  # Prevent logging for "backends"
  access_log off;
  log_not_found off;

  # Don't cache me
  expires -1;

  # Return webpage
  location / {
    return 200 '<?xml version="1.0"?>
    <soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope/" soap:encodingStyle="http://www.w3.org/2003/05/soap-encoding">
    OT30
    </soap:Envelope>';
  }

  # Health check page
  location /health {
    return 200 '<?xml version="1.0" encoding="utf-8"?>
    <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
    <soap:Body>
    <HealthCheck xmlns="http://www.example.com/webservice/" />
    </soap:Body>
    </soap:Envelope>';
  }
}

#
# "OT31"
#

server {

  # loopback host
  listen 9002;

  # Accept any hostname
  server_name "";

  default_type text/xml;

  # Prevent logging for "backends"
  access_log off;
  log_not_found off;

  # Don't cache me
  expires -1;

  # Return webpage
  location / {
    return 200 '<?xml version="1.0"?>
    <soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope/" soap:encodingStyle="http://www.w3.org/2003/05/soap-encoding">
    OT31
    </soap:Envelope>';
  }

  # Health check page
  location /health {
    return 200 '<?xml version="1.0" encoding="utf-8"?>
    <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
    <soap:Body>
    <HealthCheck xmlns="http://www.example.com/webservice/" />
    </soap:Body>
    </soap:Envelope>';
  }
}

#
# "X"
#

server {

  # loopback host
  listen 9003;

  # Accept any hostname
  server_name "";

  default_type text/xml;

  # Prevent logging for "backends"
  access_log off;
  log_not_found off;

  # Don't cache me
  expires -1;

  # Return webpage
  location / {
    return 200 '<?xml version="1.0"?>
    <soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope/" soap:encodingStyle="http://www.w3.org/2003/05/soap-encoding">
    x
    </soap:Envelope>';
  }

  # Health check page
  location /health {
    return 200 '<?xml version="1.0" encoding="utf-8"?>
    <soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
    <soap:Body>
    <HealthCheck xmlns="http://www.example.com/webservice/" />
    </soap:Body>
    </soap:Envelope>';
  }
}


server {

  # loopback host for ERROR messages
  listen 9004;

  # Accept any hostname
  server_name "";

  default_type text/xml;

  # Prevent logging for "backends"
  access_log off;
  log_not_found off;

  # Don't cache me
  expires -1;

  # Return webpage
  location / {
    return 502 '<soapenv:Envelope xmlns:omn="http://www.example.com" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
    <soapenv:Header>
    <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd">
    <wsse:InvalidField wsu:Id="UsernameToken-F9ABFF4463C01A06AB15912159684931">
    </wsse:InvalidField>
    </wsse:Security>
    </soapenv:Header>
    <soapenv:Body>
    <omn:GetDrivers/>
    </soapenv:Body>
    </soapenv:Envelope> ';
  }
}


server {
  # loopback host for ERROR messages
  listen 9005;

  # Accept any hostname
  server_name "";

  default_type text/xml;

  # Prevent logging for "backends"
  access_log off;
  log_not_found off;

  # Don't cache me
  expires -1;

  # Return webpage
  location / {
      return 501 '<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"> 
        <soap:Header> 
            <wsa:Action>http://schemas.xmlsoap.org/ws/2004/08/addressing/fault</wsa:Action> 
            <wsa:MessageID>urn:uuid:abf90386-43e6-4c3f-ae39-ad9998b85639</wsa:MessageID> 
            <wsa:RelatesTo>urn:uuid:dbbc6a31-eb54-4f82-84de-7d9e96b63019</wsa:RelatesTo> 
            <wsa:To>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</wsa:To> 
            <wsse:Security> 
              <wsu:Timestamp wsu:Id="Timestamp-31995f28-d81b-427e-907c-d0dbf1d87b88"> 
                  <wsu:Created>2020-10-07T22:30:04Z</wsu:Created> 
                  <wsu:Expires>2020-10-07T22:35:04Z</wsu:Expires> 
              </wsu:Timestamp> 
            </wsse:Security> 
        </soap:Header> 
        <soap:Body> 
            <soap:Fault> 
              <faultcode>soap:Client</faultcode> 
              <faultstring>Unauthorized request.  Make sure the Customer name, User and Password are provided.</faultstring> 
              <detail/> 
            </soap:Fault> 
        </soap:Body> 
      </soap:Envelope>';
  }
}