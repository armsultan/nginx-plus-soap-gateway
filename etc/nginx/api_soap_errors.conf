# https://www.tutorialspoint.com/soap/soap_fault.htm
# SOAP Fault is linked to the 500 to 599 range of status codes.
# In general, HTTP uses the 400-level response codes to indicate that the client 
# made some kind of error when transmitting the message. For example, you have 
# undoubtedly encountered the infamous 404 Resource Not Found error when using a 
# Web browser. The 404 error code signifies that the client attempted to access a 
# Web page or some other resource that doesn't exist. Web services uses a specific 
# set of 400-level codes when the error is related to the contents of the SOAP 
# message itself, rather than the HTTP request. HTTP also uses the 500-level 
# response codes to indicate that the server suffered some type of failure that 
# is not the client's fault.

# 400 Bad Request This error code is used to indicate that either the HTTP 
# request or the XML in the SOAP message was not well formed.

# 405 Method Not Allowed If a Web service receives a SOAP message via any HTTP 
# method other than HTTP POST, the service should return a 405 Method Not Allowed 
# error to the sender.

# 415 Unsupported Media Type HTTP POST messages must include a Content-Type 
# header with a value of text/xml. If it's any other value, the server must 
# return a 415 Unsupported Media Type error.

# 500 Internal Server Error This code must be used when the response message 
# in a Request/Response MEP is a SOAP fault.


# If the type is unknown we need to respond back with: 
error_page 501 = @501;
location @501 { return 501 '<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"> 
   <soap:Header> 
      <wsa:Action>http://schemas.xmlsoap.org/ws/2004/08/addressing/fault</wsa:Action> 
      <wsa:MessageID>urn:uuid:abf90386-43e6-4c3f-ae39-ad9998b85639</wsa:MessageID> 
      <wsa:RelatesTo>urn:uuid:dbbc6a31-eb54-4f82-84de-7d9e96b63019</wsa:RelatesTo> 
      <wsa:To>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</wsa:To> 
      <wsse:Security> 
         <wsu:Timestamp wsu:Id="Timestamp-31995f28-d81b-427e-907c-d0dbf1d87b88"> 
            <wsu:Created>2020-10-07T22:30:04Z</wsu:Created> 
            <wsu:Expires>2020-10-07T22:35:04Z</wsu:Expires> 
         </wsu:Timestamp> 
      </wsse:Security> 
   </soap:Header> 
   <soap:Body> 
      <soap:Fault> 
         <faultcode>soap:Client</faultcode> 
         <faultstring>Unauthorized request.  Make sure the Customer name, User and Password are provided.</faultstring> 
         <detail/> 
      </soap:Fault> 
   </soap:Body> 
</soap:Envelope>'; }

# When the gateway receives and invalid field in the security header: 
error_page 502 = @502;
location @502 { return 502 '<soapenv:Envelope xmlns:omn="http://www.example.com" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> 
   <soapenv:Header> 
      <wsse:Security soapenv:mustUnderstand="1" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"> 
         <wsse:InvalidField wsu:Id="UsernameToken-F9ABFF4463C01A06AB15912159684931"> 
         </wsse:InvalidField> 
      </wsse:Security> 
   </soapenv:Header> 
   <soapenv:Body> 
      <omn:GetDrivers/> 
   </soapenv:Body> 
</soapenv:Envelope> '; }